{"ast":null,"code":"var _jsxFileName = \"/Users/andriitaran/Desktop/brainstation-projects/projects/andrii-taran-brainflix/sprint-two/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./styles/main.css\";\nimport uuid from \"uuid/v1\";\nimport { BrowserRouter as Router, Switch, Route, Redirect, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Header from \"./components/Header\";\nimport VideoPlayer from \"./components/VideoPlayer\";\nimport VideoInfo from \"./components/VideoInfo\";\nimport Comments from \"./components/Comments\";\nimport VideosList from \"./components/VideosList\";\nimport Upload from \"./components/Upload\";\nconst apiKey = \"c354bbd6-1b57-4f1e-b0f3-8743d4495710\";\n\nconst componentDidUpdate = props => {\n  axios.get(`https://project-2-api.herokuapp.com/videos/${props.id}?api_key=<${apiKey}>`).then(response => {\n    this.setState({\n      currentVideo: response.data\n    });\n  });\n};\n\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      videos: [],\n      currentVideo: {},\n      loading: false\n    };\n\n    this.addComment = comment => {\n      let newComments = this.state.currentVideo.comments;\n      newComments.unshift(comment);\n      this.setState({\n        comments: newComments\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.all([axios.get(`https://project-2-api.herokuapp.com/videos?api_key=<${apiKey}>`), axios.get(`https://project-2-api.herokuapp.com/videos/1af0jruup5gu?api_key=<${apiKey}>`)]).then(responseArr => {\n      console.log(responseArr[0].data);\n      this.setState({\n        videos: responseArr[0].data,\n        currentVideo: responseArr[1].data,\n        loading: true\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Redirect, {\n      from: \"/home\",\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      render: () => React.createElement(React.Fragment, null, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(VideoPlayer, {\n        currentVideo: this.state.currentVideo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(\"section\", {\n        className: \"wrapper-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        className: \"wrapper-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(VideoInfo, {\n        currentVideo: this.state.currentVideo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(Comments, {\n        loading: this.state.loading,\n        currentVideo: this.state.currentVideo,\n        addComment: this.addComment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      })), React.createElement(VideosList, {\n        videos: this.state.videos,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      })), React.createElement(Route, {\n        path: \"/video/:id\",\n        render: routerProps => {\n          const video = this.state.videos.find(video => {\n            return routerProps.match.params.id === video.id;\n          });\n\n          componentDidUpdate = video => {\n            axios.get(`https://project-2-api.herokuapp.com/videos/${video.id}?api_key=<${apiKey}>`).then(response => {\n              this.setState({\n                currentVideo: response.data\n              });\n            });\n          };\n\n          return React.createElement(React.Fragment, null, React.createElement(Header, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112\n            },\n            __self: this\n          }), React.createElement(VideoPlayer, Object.assign({\n            currentVideo: video\n          }, routerProps, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113\n            },\n            __self: this\n          })), React.createElement(\"section\", {\n            className: \"wrapper-1\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114\n            },\n            __self: this\n          }, React.createElement(\"section\", {\n            className: \"wrapper-2\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115\n            },\n            __self: this\n          }, React.createElement(VideoInfo, Object.assign({\n            currentVideo: video\n          }, routerProps, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116\n            },\n            __self: this\n          })), React.createElement(Comments, Object.assign({\n            currentVideo: video\n          }, routerProps, {\n            addComment: this.addComment,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117\n            },\n            __self: this\n          }))), React.createElement(VideosList, {\n            videos: this.state.videos,\n            componentDidUpdate: this.componentDidUpdate,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123\n            },\n            __self: this\n          })));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/upload\",\n      render: () => React.createElement(React.Fragment, null, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }), React.createElement(Upload, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), \")}\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/andriitaran/Desktop/brainstation-projects/projects/andrii-taran-brainflix/sprint-two/src/App.js"],"names":["React","Component","uuid","BrowserRouter","Router","Switch","Route","Redirect","Link","axios","Header","VideoPlayer","VideoInfo","Comments","VideosList","Upload","apiKey","componentDidUpdate","props","get","id","then","response","setState","currentVideo","data","App","state","videos","loading","addComment","comment","newComments","comments","unshift","componentDidMount","all","responseArr","console","log","render","routerProps","video","find","match","params"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./styles/main.css\";\nimport uuid from \"uuid/v1\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  Link\n} from \"react-router-dom\";\nimport axios from \"axios\";\nimport Header from \"./components/Header\";\nimport VideoPlayer from \"./components/VideoPlayer\";\nimport VideoInfo from \"./components/VideoInfo\";\nimport Comments from \"./components/Comments\";\nimport VideosList from \"./components/VideosList\";\nimport Upload from \"./components/Upload\";\n\nconst apiKey = \"c354bbd6-1b57-4f1e-b0f3-8743d4495710\";\n\nconst componentDidUpdate = props => {\n  axios\n    .get(\n      `https://project-2-api.herokuapp.com/videos/${props.id}?api_key=<${apiKey}>`\n    )\n    .then(response => {\n      this.setState({\n        currentVideo: response.data\n      });\n    });\n};\n\nexport default class App extends Component {\n  state = {\n    videos: [],\n    currentVideo: {},\n    loading: false\n  };\n\n  addComment = comment => {\n    let newComments = this.state.currentVideo.comments;\n    newComments.unshift(comment);\n    this.setState({\n      comments: newComments\n    });\n  };\n\n  componentDidMount() {\n    axios\n      .all([\n        axios.get(\n          `https://project-2-api.herokuapp.com/videos?api_key=<${apiKey}>`\n        ),\n        axios.get(\n          `https://project-2-api.herokuapp.com/videos/1af0jruup5gu?api_key=<${apiKey}>`\n        )\n      ])\n      .then(responseArr => {\n        console.log(responseArr[0].data);\n        this.setState({\n          videos: responseArr[0].data,\n          currentVideo: responseArr[1].data,\n          loading: true\n        });\n      });\n  }\n\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Redirect from=\"/home\" to=\"/\" />\n          <Route\n            path=\"/\"\n            exact\n            render={() => (\n              <>\n                <Header />\n                <VideoPlayer currentVideo={this.state.currentVideo} />\n                <section className=\"wrapper-1\">\n                  <section className=\"wrapper-2\">\n                    <VideoInfo currentVideo={this.state.currentVideo} />\n                    <Comments\n                      loading={this.state.loading}\n                      currentVideo={this.state.currentVideo}\n                      addComment={this.addComment}\n                    />\n                  </section>\n                  <VideosList videos={this.state.videos} />\n                </section>\n\n                <Route\n                  path=\"/video/:id\"\n                  render={routerProps => {\n                    const video = this.state.videos.find(video => {\n                      return routerProps.match.params.id === video.id;\n                    });\n                    componentDidUpdate = video => {\n                      axios\n                        .get(\n                          `https://project-2-api.herokuapp.com/videos/${video.id}?api_key=<${apiKey}>`\n                        )\n                        .then(response => {\n                          this.setState({\n                            currentVideo: response.data\n                          });\n                        });\n                    };\n\n                    return (\n                      <>\n                        <Header />\n                        <VideoPlayer currentVideo={video} {...routerProps} />\n                        <section className=\"wrapper-1\">\n                          <section className=\"wrapper-2\">\n                            <VideoInfo currentVideo={video} {...routerProps} />\n                            <Comments\n                              currentVideo={video}\n                              {...routerProps}\n                              addComment={this.addComment}\n                            />\n                          </section>\n                          <VideosList\n                            videos={this.state.videos}\n                            componentDidUpdate={this.componentDidUpdate}\n                          />\n                        </section>\n                      </>\n                    );\n                  }}\n                />\n              </>\n            )}\n          />\n          <Route\n            path=\"/upload\"\n            render={() => (\n              <>\n                <Header />\n                <Upload />\n              </>\n            )}\n          />\n          )}\n        </Switch>\n      </Router>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}