{"ast":null,"code":"var _jsxFileName = \"/Users/andriitaran/Desktop/brainstation-projects/projects/andrii-taran-brainflix/sprint-two/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./styles/main.css\";\nimport axios from \"axios\";\nimport Header from \"./components/Header\";\nimport VideoPlayer from \"./components/VideoPlayer\";\nimport VideoInfo from \"./components/VideoInfo\";\nimport Comments from \"./components/Comments\";\nimport VideosList from \"./components/VideosList\";\nconst apiKey = \"c354bbd6-1b57-4f1e-b0f3-8743d4495710\";\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      videos: [],\n      currentVideo: {},\n      loading: false\n    };\n\n    this.addComment = comment => {\n      let newComments = this.state.currentVideo.comments;\n      axios({\n        // post to API\n        method: \"post\",\n        url: `https://project-2-api.herokuapp.com/videos/${id}/comments/?api_key=<${apiKey}>`,\n        data: newPost,\n        headers: {\n          \"Content-Type\": \"application/json;charset=UTF-8\"\n        }\n      }).then(response => {});\n      newComments.unshift(comment);\n      this.setState({\n        comments: newComments\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.all([axios.get(`https://project-2-api.herokuapp.com/videos/1af0jruup5gu?api_key=<${apiKey}>`), axios.get(`https://project-2-api.herokuapp.com/videos?api_key=<${apiKey}>`)]).then(responseArr => {\n      this.setState({\n        currentVideo: responseArr[0].data,\n        videos: responseArr[1].data.filter(video => {\n          return video.id !== \"1af0jruup5gu\";\n        }),\n        loading: true\n      });\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.match.params.id !== this.props.match.params.id) {\n      axios.all([axios.get(`https://project-2-api.herokuapp.com/videos/${this.props.match.params.id}?api_key=<${apiKey}>`), axios.get(`https://project-2-api.herokuapp.com/videos?api_key=<${apiKey}>`)]).then(responseArr => {\n        this.setState({\n          currentVideo: responseArr[0].data,\n          videos: responseArr[1].data.filter(video => {\n            return video.id !== this.props.match.params.id;\n          }),\n          loading: true\n        });\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(VideoPlayer, {\n      currentVideo: this.state.currentVideo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"section\", {\n      className: \"wrapper-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      className: \"wrapper-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(VideoInfo, {\n      currentVideo: this.state.currentVideo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(Comments, {\n      currentVideo: this.state.currentVideo,\n      addComment: this.addComment,\n      loading: this.state.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })), React.createElement(VideosList, {\n      videos: this.state.videos,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/andriitaran/Desktop/brainstation-projects/projects/andrii-taran-brainflix/sprint-two/src/App.js"],"names":["React","Component","axios","Header","VideoPlayer","VideoInfo","Comments","VideosList","apiKey","App","state","videos","currentVideo","loading","addComment","comment","newComments","comments","method","url","id","data","newPost","headers","then","response","unshift","setState","componentDidMount","all","get","responseArr","filter","video","componentDidUpdate","prevProps","match","params","props","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./styles/main.css\";\nimport axios from \"axios\";\nimport Header from \"./components/Header\";\nimport VideoPlayer from \"./components/VideoPlayer\";\nimport VideoInfo from \"./components/VideoInfo\";\nimport Comments from \"./components/Comments\";\nimport VideosList from \"./components/VideosList\";\n\nconst apiKey = \"c354bbd6-1b57-4f1e-b0f3-8743d4495710\";\n\nexport default class App extends Component {\n  state = {\n    videos: [],\n    currentVideo: {},\n    loading: false\n  };\n\n  addComment = comment => {\n    let newComments = this.state.currentVideo.comments;\n    axios({\n      // post to API\n      method: \"post\",\n      url:\n        `https://project-2-api.herokuapp.com/videos/${id}/comments/?api_key=<${apiKey}>`,\n      data: newPost,\n      headers: {\n        \"Content-Type\": \"application/json;charset=UTF-8\"\n      }\n    }).then(response => {\n\n    });\n\n\n\n    newComments.unshift(comment);\n    this.setState({\n      comments: newComments\n    });\n  };\n\n  componentDidMount() {\n    axios\n      .all([\n        axios.get(\n          `https://project-2-api.herokuapp.com/videos/1af0jruup5gu?api_key=<${apiKey}>`\n        ),\n        axios.get(\n          `https://project-2-api.herokuapp.com/videos?api_key=<${apiKey}>`\n        )\n      ])\n      .then(responseArr => {\n        this.setState({\n          currentVideo: responseArr[0].data,\n          videos: responseArr[1].data.filter(video => {\n            return video.id !== \"1af0jruup5gu\";\n          }),\n          loading: true\n        });\n      });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.match.params.id !== this.props.match.params.id) {\n      axios\n        .all([\n          axios.get(\n            `https://project-2-api.herokuapp.com/videos/${this.props.match.params.id}?api_key=<${apiKey}>`\n          ),\n          axios.get(\n            `https://project-2-api.herokuapp.com/videos?api_key=<${apiKey}>`\n          )\n        ])\n        .then(responseArr => {\n          this.setState({\n            currentVideo: responseArr[0].data,\n            videos: responseArr[1].data.filter(video => {\n              return video.id !== this.props.match.params.id;\n            }),\n            loading: true\n          });\n        });\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n        <VideoPlayer currentVideo={this.state.currentVideo} />\n        <section className=\"wrapper-1\">\n          <section className=\"wrapper-2\">\n            <VideoInfo currentVideo={this.state.currentVideo} />\n            <Comments\n              currentVideo={this.state.currentVideo}\n              addComment={this.addComment}\n              loading={this.state.loading}\n            />\n          </section>\n          <VideosList videos={this.state.videos} />\n        </section>\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}