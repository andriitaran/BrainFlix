{"ast":null,"code":"var _jsxFileName = \"/Users/andriitaran/Desktop/brainstation-projects/projects/andrii-taran-brainflix/sprint-two/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./styles/main.css\";\nimport axios from \"axios\";\nimport Header from \"./components/Header\";\nimport VideoPlayer from \"./components/VideoPlayer\";\nimport VideoInfo from \"./components/VideoInfo\";\nimport Comments from \"./components/Comments\";\nimport VideosList from \"./components/VideosList\";\nconst apiKey = \"c354bbd6-1b57-4f1e-b0f3-8743d4495710\";\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      videos: [],\n      currentVideo: {},\n      loading: false\n    };\n\n    this.addComment = comment => {\n      // function for adding new comments\n      axios({\n        method: \"post\",\n        // posts new comment to API\n        url: `https://project-2-api.herokuapp.com/videos/${this.props.match.params.id}/comments?api_key=<${apiKey}>`,\n        data: {\n          name: comment.name,\n          comment: comment.comment\n        },\n        headers: {\n          \"Content-Type\": \"application/json;charset=UTF-8\"\n        }\n      }).then(response => {\n        return axios.get( //gets video with updated comments\n        `https://project-2-api.herokuapp.com/videos/${this.props.match.params.id}?api_key=<${apiKey}>`);\n      }).then(response => {\n        console.log(response);\n        response.data.comments.sort((a, b) => {\n          return b.timestamp - a.timestamp;\n        });\n        this.setState({\n          currentVideo: response.data //updates video with updated comments\n\n        });\n      });\n    };\n\n    this.deleteComment = comment => {\n      axios // deletes a comment from API database by id\n      .delete(`https://project-2-api.herokuapp.com/videos/${this.props.match.params.id}/comments/${comment.id}?api_key=<${apiKey}>`).then(success => {\n        return axios.get( //gets video with updated comments\n        `https://project-2-api.herokuapp.com/videos/${this.props.match.params.id}?api_key=<${apiKey}>`);\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`https://project-2-api.herokuapp.com/videos?api_key=<${apiKey}>`).then(responseArr => {\n      const randomVideo = responseArr.data[Math.floor(Math.random() * responseArr.data.length)];\n      this.setState({\n        videos: responseArr.data.filter(video => {\n          return video.id !== randomVideo.id;\n        })\n      });\n      return randomVideo;\n    }).then(randomVideo => {\n      axios.get(`https://project-2-api.herokuapp.com/videos/${randomVideo.id}?api_key=<${apiKey}>`).then(response => {\n        response.data.comments.sort((a, b) => {\n          return b.timestamp - a.timestamp;\n        });\n        this.setState({\n          currentVideo: response.data,\n          loading: true\n        });\n      });\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.match.params.id !== this.props.match.params.id) {\n      axios.all([axios.get(`https://project-2-api.herokuapp.com/videos/${this.props.match.params.id}?api_key=<${apiKey}>`), axios.get(`https://project-2-api.herokuapp.com/videos?api_key=<${apiKey}>`)]).then(responseArr => {\n        responseArr[0].data.comments.sort((a, b) => {\n          return b.timestamp - a.timestamp;\n        });\n        this.setState({\n          currentVideo: responseArr[0].data,\n          videos: responseArr[1].data.filter(video => {\n            return video.id !== this.props.match.params.id;\n          }),\n          loading: true\n        });\n      });\n      window.scrollTo(0, 0); // takes user to the top of the page after click on the side video\n    }\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(VideoPlayer, {\n      currentVideo: this.state.currentVideo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(\"section\", {\n      className: \"wrapper-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      className: \"wrapper-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(VideoInfo, {\n      currentVideo: this.state.currentVideo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(Comments, {\n      currentVideo: this.state.currentVideo,\n      addComment: this.addComment,\n      loading: this.state.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    })), React.createElement(VideosList, {\n      videos: this.state.videos,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/andriitaran/Desktop/brainstation-projects/projects/andrii-taran-brainflix/sprint-two/src/App.js"],"names":["React","Component","axios","Header","VideoPlayer","VideoInfo","Comments","VideosList","apiKey","App","state","videos","currentVideo","loading","addComment","comment","method","url","props","match","params","id","data","name","headers","then","response","get","console","log","comments","sort","a","b","timestamp","setState","deleteComment","delete","success","componentDidMount","responseArr","randomVideo","Math","floor","random","length","filter","video","componentDidUpdate","prevProps","all","window","scrollTo","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,mBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AAEA,MAAMC,MAAM,GAAG,sCAAf;AAEA,eAAe,MAAMC,GAAN,SAAkBR,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACzCS,KADyC,GACjC;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,YAAY,EAAE,EAFR;AAGNC,MAAAA,OAAO,EAAE;AAHH,KADiC;;AAAA,SAOzCC,UAPyC,GAO5BC,OAAO,IAAI;AACtB;AACAb,MAAAA,KAAK,CAAC;AACJc,QAAAA,MAAM,EAAE,MADJ;AACY;AAChBC,QAAAA,GAAG,EAAG,8CAA6C,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAAG,sBAAqBb,MAAO,GAFtG;AAGJc,QAAAA,IAAI,EAAE;AACJC,UAAAA,IAAI,EAAER,OAAO,CAACQ,IADV;AAEJR,UAAAA,OAAO,EAAEA,OAAO,CAACA;AAFb,SAHF;AAOJS,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAPL,OAAD,CAAL,CAWGC,IAXH,CAWQC,QAAQ,IAAI;AAChB,eAAOxB,KAAK,CAACyB,GAAN,EACL;AACC,sDAA6C,KAAKT,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAAG,aAAYb,MAAO,GAFvF,CAAP;AAID,OAhBH,EAiBGiB,IAjBH,CAiBQC,QAAQ,IAAI;AAChBE,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACAA,QAAAA,QAAQ,CAACJ,IAAT,CAAcQ,QAAd,CAAuBC,IAAvB,CAA4B,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACpC,iBAAOA,CAAC,CAACC,SAAF,GAAcF,CAAC,CAACE,SAAvB;AACD,SAFD;AAGA,aAAKC,QAAL,CAAc;AACZvB,UAAAA,YAAY,EAAEc,QAAQ,CAACJ,IADX,CACgB;;AADhB,SAAd;AAGD,OAzBH;AA0BD,KAnCwC;;AAAA,SAqCzCc,aArCyC,GAqCzBrB,OAAO,IAAI;AACzBb,MAAAA,KAAK,CAAC;AAAD,OACFmC,MADH,CAEK,8CAA6C,KAAKnB,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAAG,aAAYN,OAAO,CAACM,EAAG,aAAYb,MAAO,GAFvH,EAIGiB,IAJH,CAIQa,OAAO,IAAI;AACf,eAAOpC,KAAK,CAACyB,GAAN,EACL;AACC,sDAA6C,KAAKT,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAAG,aAAYb,MAAO,GAFvF,CAAP;AAKD,OAVH;AAWD,KAjDwC;AAAA;;AAmDzC+B,EAAAA,iBAAiB,GAAG;AAClBrC,IAAAA,KAAK,CACFyB,GADH,CACQ,uDAAsDnB,MAAO,GADrE,EAEGiB,IAFH,CAEQe,WAAW,IAAI;AACnB,YAAMC,WAAW,GACfD,WAAW,CAAClB,IAAZ,CAAiBoB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,WAAW,CAAClB,IAAZ,CAAiBuB,MAA5C,CAAjB,CADF;AAEA,WAAKV,QAAL,CAAc;AACZxB,QAAAA,MAAM,EAAE6B,WAAW,CAAClB,IAAZ,CAAiBwB,MAAjB,CAAwBC,KAAK,IAAI;AACvC,iBAAOA,KAAK,CAAC1B,EAAN,KAAaoB,WAAW,CAACpB,EAAhC;AACD,SAFO;AADI,OAAd;AAKA,aAAOoB,WAAP;AACD,KAXH,EAYGhB,IAZH,CAYQgB,WAAW,IAAI;AACnBvC,MAAAA,KAAK,CACFyB,GADH,CAEK,8CAA6Cc,WAAW,CAACpB,EAAG,aAAYb,MAAO,GAFpF,EAIGiB,IAJH,CAIQC,QAAQ,IAAI;AAChBA,QAAAA,QAAQ,CAACJ,IAAT,CAAcQ,QAAd,CAAuBC,IAAvB,CAA4B,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACpC,iBAAOA,CAAC,CAACC,SAAF,GAAcF,CAAC,CAACE,SAAvB;AACD,SAFD;AAGA,aAAKC,QAAL,CAAc;AACZvB,UAAAA,YAAY,EAAEc,QAAQ,CAACJ,IADX;AAEZT,UAAAA,OAAO,EAAE;AAFG,SAAd;AAID,OAZH;AAaD,KA1BH;AA2BD;;AAEDmC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,QAAIA,SAAS,CAAC9B,KAAV,CAAgBC,MAAhB,CAAuBC,EAAvB,KAA8B,KAAKH,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA1D,EAA8D;AAC5DnB,MAAAA,KAAK,CACFgD,GADH,CACO,CACHhD,KAAK,CAACyB,GAAN,CACG,8CAA6C,KAAKT,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAAG,aAAYb,MAAO,GAD9F,CADG,EAIHN,KAAK,CAACyB,GAAN,CACG,uDAAsDnB,MAAO,GADhE,CAJG,CADP,EASGiB,IATH,CASQe,WAAW,IAAI;AACnBA,QAAAA,WAAW,CAAC,CAAD,CAAX,CAAelB,IAAf,CAAoBQ,QAApB,CAA6BC,IAA7B,CAAkC,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC1C,iBAAOA,CAAC,CAACC,SAAF,GAAcF,CAAC,CAACE,SAAvB;AACD,SAFD;AAGA,aAAKC,QAAL,CAAc;AACZvB,UAAAA,YAAY,EAAE4B,WAAW,CAAC,CAAD,CAAX,CAAelB,IADjB;AAEZX,UAAAA,MAAM,EAAE6B,WAAW,CAAC,CAAD,CAAX,CAAelB,IAAf,CAAoBwB,MAApB,CAA2BC,KAAK,IAAI;AAC1C,mBAAOA,KAAK,CAAC1B,EAAN,KAAa,KAAKH,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA5C;AACD,WAFO,CAFI;AAKZR,UAAAA,OAAO,EAAE;AALG,SAAd;AAOD,OApBH;AAqBAsC,MAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB,EAtB4D,CAsBrC;AACxB;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE,0CACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,WAAD;AAAa,MAAA,YAAY,EAAE,KAAK3C,KAAL,CAAWE,YAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAS,MAAA,SAAS,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAS,MAAA,SAAS,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,YAAY,EAAE,KAAKF,KAAL,CAAWE,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,QAAD;AACE,MAAA,YAAY,EAAE,KAAKF,KAAL,CAAWE,YAD3B;AAEE,MAAA,UAAU,EAAE,KAAKE,UAFnB;AAGE,MAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWG,OAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EASE,oBAAC,UAAD;AAAY,MAAA,MAAM,EAAE,KAAKH,KAAL,CAAWC,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CAHF,CADF;AAiBD;;AA9HwC","sourcesContent":["import React, { Component } from \"react\";\nimport \"./styles/main.css\";\nimport axios from \"axios\";\nimport Header from \"./components/Header\";\nimport VideoPlayer from \"./components/VideoPlayer\";\nimport VideoInfo from \"./components/VideoInfo\";\nimport Comments from \"./components/Comments\";\nimport VideosList from \"./components/VideosList\";\n\nconst apiKey = \"c354bbd6-1b57-4f1e-b0f3-8743d4495710\";\n\nexport default class App extends Component {\n  state = {\n    videos: [],\n    currentVideo: {},\n    loading: false\n  };\n\n  addComment = comment => {\n    // function for adding new comments\n    axios({\n      method: \"post\", // posts new comment to API\n      url: `https://project-2-api.herokuapp.com/videos/${this.props.match.params.id}/comments?api_key=<${apiKey}>`,\n      data: {\n        name: comment.name,\n        comment: comment.comment\n      },\n      headers: {\n        \"Content-Type\": \"application/json;charset=UTF-8\"\n      }\n    })\n      .then(response => {\n        return axios.get(\n          //gets video with updated comments\n          `https://project-2-api.herokuapp.com/videos/${this.props.match.params.id}?api_key=<${apiKey}>`\n        );\n      })\n      .then(response => {\n        console.log(response);\n        response.data.comments.sort((a, b) => {\n          return b.timestamp - a.timestamp;\n        });\n        this.setState({\n          currentVideo: response.data //updates video with updated comments\n        });\n      });\n  };\n\n  deleteComment = comment => {\n    axios // deletes a comment from API database by id\n      .delete(\n        `https://project-2-api.herokuapp.com/videos/${this.props.match.params.id}/comments/${comment.id}?api_key=<${apiKey}>`\n      )\n      .then(success => {\n        return axios.get(\n          //gets video with updated comments\n          `https://project-2-api.herokuapp.com/videos/${this.props.match.params.id}?api_key=<${apiKey}>`\n        );\n       \n      });\n  };\n\n  componentDidMount() {\n    axios\n      .get(`https://project-2-api.herokuapp.com/videos?api_key=<${apiKey}>`)\n      .then(responseArr => {\n        const randomVideo =\n          responseArr.data[Math.floor(Math.random() * responseArr.data.length)];\n        this.setState({\n          videos: responseArr.data.filter(video => {\n            return video.id !== randomVideo.id;\n          })\n        });\n        return randomVideo;\n      })\n      .then(randomVideo => {\n        axios\n          .get(\n            `https://project-2-api.herokuapp.com/videos/${randomVideo.id}?api_key=<${apiKey}>`\n          )\n          .then(response => {\n            response.data.comments.sort((a, b) => {\n              return b.timestamp - a.timestamp;\n            });\n            this.setState({\n              currentVideo: response.data,\n              loading: true\n            });\n          });\n      });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.match.params.id !== this.props.match.params.id) {\n      axios\n        .all([\n          axios.get(\n            `https://project-2-api.herokuapp.com/videos/${this.props.match.params.id}?api_key=<${apiKey}>`\n          ),\n          axios.get(\n            `https://project-2-api.herokuapp.com/videos?api_key=<${apiKey}>`\n          )\n        ])\n        .then(responseArr => {\n          responseArr[0].data.comments.sort((a, b) => {\n            return b.timestamp - a.timestamp;\n          });\n          this.setState({\n            currentVideo: responseArr[0].data,\n            videos: responseArr[1].data.filter(video => {\n              return video.id !== this.props.match.params.id;\n            }),\n            loading: true\n          });\n        });\n      window.scrollTo(0, 0); // takes user to the top of the page after click on the side video\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n        <VideoPlayer currentVideo={this.state.currentVideo} />\n        <section className=\"wrapper-1\">\n          <section className=\"wrapper-2\">\n            <VideoInfo currentVideo={this.state.currentVideo} />\n            <Comments\n              currentVideo={this.state.currentVideo}\n              addComment={this.addComment}\n              loading={this.state.loading}\n            />\n          </section>\n          <VideosList videos={this.state.videos} />\n        </section>\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}