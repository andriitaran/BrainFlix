{"ast":null,"code":"var _jsxFileName = \"/Users/andriitaran/Desktop/brainstation-projects/projects/andrii-taran-brainflix/sprint-two/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./styles/main.css\";\nimport uuid from \"uuid/v1\";\nimport { BrowserRouter as Router, Switch, Route, Redirect, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Header from \"./components/Header\";\nimport VideoPlayer from \"./components/VideoPlayer\";\nimport VideoInfo from \"./components/VideoInfo\";\nimport Comments from \"./components/Comments\";\nimport VideosList from \"./components/VideosList\";\nimport Upload from \"./components/Upload\";\nconst apiKey = \"c354bbd6-1b57-4f1e-b0f3-8743d4495710\";\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      videos: [],\n      currentVideo: {}\n    };\n\n    this.addComment = comment => {\n      let newComments = this.state.currentVideo.comments;\n      newComments.unshift(comment);\n      this.setState({\n        comments: newComments\n      });\n    };\n  }\n\n  componentDidMount() {\n    // axios\n    //   .all([\n    //     axios.get(\n    //       `https://project-2-api.herokuapp.com/videos?api_key=<${apiKey}>`\n    //     ),\n    //     axios.get(\n    //       `https://project-2-api.herokuapp.com/videos/1af0jruup5gu?api_key=<${apiKey}>`\n    //     )\n    //   ])\n    //   .then(responseArr => {\n    //     this.setState({\n    //       videos: responseArr[0].data,\n    //       currentVideo: responseArr[1].data\n    //     });\n    //   });\n    axios.get(`https://project-2-api.herokuapp.com/videos?api_key=<${apiKey}>`).then(response => {\n      console.log(response.data); // this.setState({\n      //   videos: response.data\n      // });\n    }, axios.get(`https://project-2-api.herokuapp.com/videos/1af0jruup5gu?api_key=<${apiKey}>`).then(response => {// this.setState({\n      //   currentVideo: response.data\n      // });\n    }));\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Redirect, {\n      from: \"/home\",\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      render: () => React.createElement(React.Fragment, null, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(VideoPlayer, {\n        currentVideo: this.state.currentVideo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(\"section\", {\n        className: \"wrapper-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        className: \"wrapper-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(VideoInfo, {\n        currentVideo: this.state.currentVideo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(Comments, {\n        currentVideo: this.state.currentVideo,\n        addComment: this.addComment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })), React.createElement(VideosList, {\n        videos: this.state.videos,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      })), React.createElement(Route, {\n        path: \"/video/:id\",\n        render: routerProps => {\n          return React.createElement(React.Fragment, null, React.createElement(Header, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101\n            },\n            __self: this\n          }), React.createElement(VideoPlayer, Object.assign({\n            currentVideo: this.state.currentVideo\n          }, routerProps, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102\n            },\n            __self: this\n          })), React.createElement(\"section\", {\n            className: \"wrapper-1\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106\n            },\n            __self: this\n          }, React.createElement(\"section\", {\n            className: \"wrapper-2\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107\n            },\n            __self: this\n          }, React.createElement(VideoInfo, Object.assign({\n            currentVideo: this.state.currentVideo\n          }, routerProps, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108\n            },\n            __self: this\n          })), React.createElement(Comments, Object.assign({\n            currentVideo: this.state.currentVideo\n          }, routerProps, {\n            addComment: this.addComment,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112\n            },\n            __self: this\n          }))), React.createElement(VideosList, {\n            videos: this.state.videos,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118\n            },\n            __self: this\n          })));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/upload\",\n      render: () => React.createElement(React.Fragment, null, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), React.createElement(Upload, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), \")}\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/andriitaran/Desktop/brainstation-projects/projects/andrii-taran-brainflix/sprint-two/src/App.js"],"names":["React","Component","uuid","BrowserRouter","Router","Switch","Route","Redirect","Link","axios","Header","VideoPlayer","VideoInfo","Comments","VideosList","Upload","apiKey","App","state","videos","currentVideo","addComment","comment","newComments","comments","unshift","setState","componentDidMount","get","then","response","console","log","data","render","routerProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./styles/main.css\";\nimport uuid from \"uuid/v1\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  Link\n} from \"react-router-dom\";\nimport axios from \"axios\";\nimport Header from \"./components/Header\";\nimport VideoPlayer from \"./components/VideoPlayer\";\nimport VideoInfo from \"./components/VideoInfo\";\nimport Comments from \"./components/Comments\";\nimport VideosList from \"./components/VideosList\";\nimport Upload from \"./components/Upload\";\n\nconst apiKey = \"c354bbd6-1b57-4f1e-b0f3-8743d4495710\";\n\nexport default class App extends Component {\n  state = {\n    videos: [],\n    currentVideo: {}\n  };\n\n  addComment = comment => {\n    let newComments = this.state.currentVideo.comments;\n    newComments.unshift(comment);\n    this.setState({\n      comments: newComments\n    });\n  };\n\n  componentDidMount() {\n    // axios\n    //   .all([\n    //     axios.get(\n    //       `https://project-2-api.herokuapp.com/videos?api_key=<${apiKey}>`\n    //     ),\n    //     axios.get(\n    //       `https://project-2-api.herokuapp.com/videos/1af0jruup5gu?api_key=<${apiKey}>`\n    //     )\n    //   ])\n    //   .then(responseArr => {\n    //     this.setState({\n    //       videos: responseArr[0].data,\n    //       currentVideo: responseArr[1].data\n    //     });\n    //   });\n\n    axios\n      .get(`https://project-2-api.herokuapp.com/videos?api_key=<${apiKey}>`)\n      .then(\n        response => {\n          console.log(response.data)\n          // this.setState({\n          //   videos: response.data\n          // });\n        },\n        axios\n          .get(\n            `https://project-2-api.herokuapp.com/videos/1af0jruup5gu?api_key=<${apiKey}>`\n          )\n          .then(response => {\n            // this.setState({\n            //   currentVideo: response.data\n            // });\n          })\n      );\n  }\n\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Redirect from=\"/home\" to=\"/\" />\n          <Route\n            path=\"/\"\n            exact\n            render={() => (\n              <>\n                <Header />\n                <VideoPlayer currentVideo={this.state.currentVideo} />\n                <section className=\"wrapper-1\">\n                  <section className=\"wrapper-2\">\n                    <VideoInfo currentVideo={this.state.currentVideo} />\n                    <Comments\n                      currentVideo={this.state.currentVideo}\n                      addComment={this.addComment}\n                    />\n                  </section>\n                  <VideosList videos={this.state.videos} />\n                </section>\n\n                <Route\n                  path=\"/video/:id\"\n                  render={routerProps => {\n                    return (\n                      <>\n                        <Header />\n                        <VideoPlayer\n                          currentVideo={this.state.currentVideo}\n                          {...routerProps}\n                        />\n                        <section className=\"wrapper-1\">\n                          <section className=\"wrapper-2\">\n                            <VideoInfo\n                              currentVideo={this.state.currentVideo}\n                              {...routerProps}\n                            />\n                            <Comments\n                              currentVideo={this.state.currentVideo}\n                              {...routerProps}\n                              addComment={this.addComment}\n                            />\n                          </section>\n                          <VideosList videos={this.state.videos} />\n                        </section>\n                      </>\n                    );\n                  }}\n                />\n              </>\n            )}\n          />\n          <Route\n            path=\"/upload\"\n            render={() => (\n              <>\n                <Header />\n                <Upload />\n              </>\n            )}\n          />\n          )}\n        </Switch>\n      </Router>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}